geom_hline(yintercept =0, linetype = "dashed",alpha=0.5, lwd =2)+
geom_smooth(method = "lm",formula = y~x, se=F, lwd=2)+
facet_wrap(.~var))
fact %>% filter(Temperature <30) %>%
ggplot(aes(x=connectance,y=Dominant_eigenvalue,color=factor(h2)))+
geom_point(size=4,alpha =0.5)+
theme_bw()+
geom_smooth(method = "lm",formula = y~x, se=F)+
facet_wrap(.~var)
(n1<-net_dat %>% ggplot(aes(x= Temperature, y =trait_lag, color=factor(h2)))+
geom_point(size =4, alpha =0.21)+
theme_bw()+
ylim(c(-4,20))+
scale_color_brewer(palette="Dark2")+
facet_wrap(.~individual_variation)+
ylab("network trait lag")+
labs(color="heritability"))
(r12<-fact %>% filter(Temperature <25) %>%
ggplot(aes(x=nestedness,y=Dominant_eigenvalue,color=factor(h2)))+
geom_point(size=4,alpha =0.5)+
scale_color_brewer(palette="Dark2")+
theme_bw()+
labs(color="heritability")+
ylab("Re(dominant eigenvalue)")+
xlab("Nestedness (NODF)")+
scale_color_brewer(palette="Dark2")+
geom_hline(yintercept =0, linetype = "dashed",alpha=0.5, lwd =2)+
geom_smooth(method = "lm",formula = y~x, se=F, lwd=2)+
facet_wrap(.~var))
n1
r12
(n1<-net_dat %>% ggplot(aes(x= Temperature, y =trait_lag, color=factor(h2)))+
geom_point(size =4, alpha =0.21)+
theme_bw()+
ylim(c(-4,20))+
ggtitle("A")+
scale_color_brewer(palette="Dark2")+
facet_wrap(.~individual_variation)+
ylab("network trait lag")+
labs(color="heritability"))
(r12<-fact %>% filter(Temperature <25) %>%
ggplot(aes(x=nestedness,y=Dominant_eigenvalue,color=factor(h2)))+
geom_point(size=4,alpha =0.5)+
scale_color_brewer(palette="Dark2")+
theme_bw()+
labs(color="heritability")+
ylab("Re(dominant eigenvalue)")+
xlab("Nestedness (NODF)")+
ggtitle("B")+
scale_color_brewer(palette="Dark2")+
geom_hline(yintercept =0, linetype = "dashed",alpha=0.5, lwd =2)+
geom_smooth(method = "lm",formula = y~x, se=F, lwd=2)+
facet_wrap(.~var))
grid_arrange_shared_legend(n1,r12, nrow = 2,ncol = 1)
(n1<-net_dat %>% ggplot(aes(x= Temperature, y =trait_lag, color=factor(h2)))+
geom_point(size =4, alpha =0.21)+
theme_bw()+
ylim(c(-4,20))+
ggtitle("B")+
scale_color_brewer(palette="Dark2")+
facet_wrap(.~individual_variation)+
ylab("network trait lag")+
labs(color="heritability"))
(n1<-net_dat %>% ggplot(aes(x= Temperature, y =trait_lag, color=factor(h2)))+
geom_point(size =4, alpha =0.21)+
theme_bw()+
ylim(c(-4,20))+
ggtitle("B")+
scale_color_brewer(palette="Dark2")+
facet_wrap(.~individual_variation)+
ylab("network trait lag")+
labs(color="heritability"))
(r12<-fact %>% filter(Temperature <25) %>%
ggplot(aes(x=nestedness,y=Dominant_eigenvalue,color=factor(h2)))+
geom_point(size=4,alpha =0.5)+
scale_color_brewer(palette="Dark2")+
theme_bw()+
labs(color="heritability")+
ylab("Re(dominant eigenvalue)")+
xlab("Nestedness (NODF)")+
ggtitle("A")+
scale_color_brewer(palette="Dark2")+
geom_hline(yintercept =0, linetype = "dashed",alpha=0.5, lwd =2)+
geom_smooth(method = "lm",formula = y~x, se=F, lwd=2)+
facet_wrap(.~var))
grid_arrange_shared_legend(n1,r12, nrow = 2,ncol = 1)
grid_arrange_shared_legend(r12,n1, nrow = 2,ncol = 1)
(r10<-fact %>% ggplot(aes(x=Temperature,y=Dominant_eigenvalue,color=factor(h2)))+
geom_point(size=4,alpha =0.5)+
theme_bw()+
labs(color="heritability")+
scale_color_brewer(palette="Dark2")+
facet_wrap(.~var)+
ylab("Re(dominant eigenvalue)")+
xlab("Temperature"))
#TEMPERATURE AT COLLAPSE
(r1<-fact_1 %>% ggplot(aes(x =factor(h2), y = trait_matching, color=individual_variation))+
geom_boxplot(outlier.colour  =NA)+
theme_bw()+
xlab("Heritability")+
ylab("Temperature at collapse")+
ylim(c(25,38))+
scale_color_brewer(palette="Set1")+
labs(color="Trait variation")+
geom_jitter(aes(x =factor(h2), y = temperature_collapse_biomass,color=individual_variation),
position = position_dodge2(0.8), size =3, alpha =0.5))
#TEMPERATURE AT COLLAPSE
(r1<-fact_1 %>% ggplot(aes(x =factor(h2), y = trait_matching, color=individual_variation))+
geom_boxplot(outlier.colour  =NA)+
theme_bw()+
xlab("Heritability")+
ylab("Temperature at collapse")+
ylim(c(25,38))+
scale_color_brewer(palette="Set1")+
labs(color="Trait variation")+
geom_jitter(aes(x =factor(h2), y = trait_matching,color=individual_variation),
position = position_dodge2(0.8), size =3, alpha =0.5))
#TEMPERATURE AT COLLAPSE
(r1<-fact_1 %>% ggplot(aes(x =factor(h2), y = trait_matching, color=individual_variation))+
geom_boxplot(outlier.colour  =NA)+
theme_bw()+
xlab("Heritability")+
ylab("Temperature at collapse")+
scale_color_brewer(palette="Set1")+
labs(color="Trait variation")+
geom_jitter(aes(x =factor(h2), y = trait_matching,color=individual_variation),
position = position_dodge2(0.8), size =3, alpha =0.5))
#TEMPERATURE AT COLLAPSE
(r1<-fact_1 %>% ggplot(aes(x =factor(h2), y = trait_matching, color=individual_variation))+
geom_boxplot(outlier.colour  =NA)+
theme_bw()+
xlab("Heritability")+
ylab("Trait matching")+
scale_color_brewer(palette="Set1")+
labs(color="Trait variation")+
geom_jitter(aes(x =factor(h2), y = trait_matching,color=individual_variation),
position = position_dodge2(0.8), size =3, alpha =0.5))
food<-seq(1000,10000,500)
food
f<-1/(1+exp(-1*(food)))
plot(f)
f<-1/(1+exp(-1*(food-10000)))
f<-1/(1+exp(-1*(food-10000) -0.5))
plot(f)
plot(1/(1+exp(-1*(food-10000) -0.5)))
plot(1/(1+exp(-.1*(food-10000) -0.5)))
plot(1/(1+exp(-.1*(food-10000) -0.5)))
plot(1/(1+exp(-.1*(1000-10000) -seq(0,1))))
plot(1/(1+exp(-.1*(1000-10000) -seq(0,1,0.01))))
plot(1/(1+exp(-.1*(5000-10000) -seq(0,1,0.01))))
plot(1/(1+exp(-1*(5000-10000) -seq(0,1,0.01))))
plot(1/(1+exp(-2*(5000-10000) -seq(0,1,0.01))))
plot(1/(1+exp(-0.5*(5000-10000) -seq(0,1,0.01))))
plot(1/(1+exp(-0.5*(5000-10000) -seq(0,1,0.01))))
plot(1/(1+exp(-0.5*(10000-10000) -seq(0,1,0.01))))
t<-seq(0,1,0.01)
plot(t,f)
f<-(1/(1+exp(-0.5*(10000-10000) -t)))
plot(t,f)
f<-(1/(1+exp(-0.5*(1000-10000) -t)))
plot(t,f)
f<-(1/(1+exp(-0.5*(10000-1000) -t)))
plot(t,f)
f<-(1/(1+exp(-0.5*(10000-5000) -t)))
plot(t,f)
f<-(1/(1+exp(-0.5*(5000-10000) -t)))
plot(t,f)
f<-(1/(1+exp(-0.5*(5000-10000) -t)))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-0.5*(5000-10000) -t)))
plot(t,f)
f<-(1/(1+exp(-0.5*(9000-10000) -t)))
plot(t,f)
f<-(1/(1+exp(-0.5*(0.5 -t)))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-0.5*(0.5 -t))))
plot(t,f)
f<-(1/(1+exp(-5*(0.5 -t))))
plot(t,f)
f<-(1/(1+exp(-5*( (10000-5000)  -t))))
plot(t,f)
f<-(1/(1+exp(-5000*( (10000-5000)  -t))))
plot(t,f)
f<-(1/(1+exp(-5000*( (0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-5000*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-1000*(0.5  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-1000*(0.5  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-5000*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-5*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-5000*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-500*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-5000*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-5*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(5000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(1000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(2000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(5000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(10000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(1000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-100*(1000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-100*(10000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-50*(10000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-50*(1000/10000  -t))))
plot(t,f)
t=0.25
(1/(1+exp(-50*(1000/10000  -t))))
(1/(1+exp(-50*(10000/10000  -t))))
t=0.25
(1/(1+exp(-50*(10000/10000  -t))))
f<-(1/(1+exp(-50*(1000/10000  -t))))
f<-(1/(1+exp(-50*(10000/10000  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-50*(10000/10000  -t))))
plot(t,f)
t=0.25
(1/(1+exp(-50*(10000/10000  -t))))
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,1)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
(1/(1+exp(-50*(5000/10000  -t))))
t
(1/(1+exp(-50*(5000/10000  -t))))
(1/(1+exp(-50*(10000/10000  -t))))
f<-(1/(1+exp(-50*(5000/10000  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-50*(5000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-10*(5000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-50*(5000/10000  -t))))
plot(t,f)
f<-(1/(1+exp(-50*(10000/10000  -t))))
plot(t,f)
5000/10000
f<-(1/(1+exp(-50*(5000/10000  -t))))
plot(t,f)
t=0.7
(1/(1+exp(-50*(10000/10000  -t))))
(1/(1+exp(-50*(6000/10000  -t))))
t=0.7
(1/(1+exp(-50*(6000/10000  -t))))
5000/10000 - 0.5
5000/10000 - 0.1
f<-(1/(1+exp(-50*(7000/10000  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-50*(7000/10000  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-50*(1000/10000  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-50*(4000/10000  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-50*(4000/12000  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp(-50*(5000/12000  -t))))
plot(t,f)
f<-(1/(1+exp(-50*(0.5  -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp( (-5000-10000)*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp( (-10000-10000)*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp( (-1000-10000)*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp( -50*(0.5  -t))))
plot(t,f)
f<-(1/(1+exp( -50*( (1000-10000)/1000  -t))))
plot(t,f)
f<-(1/(1+exp( -50*( (1000-10000)/10 -t))))
plot(t,f)
f<-(1/(1+exp( -50*( (1000-10000) -t))))
plot(t,f)
t<-seq(0,1,0.01)
f<-(1/(1+exp( -50*( (1000-10000) -t))))
plot(t,f)
(1000-10000)
f<-(1/(1+exp( -50*( (1000/10000) -t))))
plot(t,f)
t=0.7
(1/(1+exp(-50*(6000/10000  -t))))
setwd("C:/Users/localadmin/Dropbox/Bielefeld Postdoc/08 Bsc student project-TIM/clusterun")
rm(list=ls())
source("01_functions_cluster.R")
library(foreach)
library(doMC)
library(statmod)
require(deSolve) ## for integrating ordinary differential equations
require(tidyr) ## for efficient data manipulation & plotting
#library(cowplot) ## for arranging plots in a grid
library(dplyr)
#library(readr)
library(beepr)
#library(viridis)
numcores<- 20
registerDoMC(numcores)
mydir = 'datasets_1'
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
#myfiles<-myfile
webfiles<-myfiles
#example dynamics of three species plant-pollinator system
fact_2<- expand.grid(`web` =webfiles[1:153]) %>%
as_tibble %>%
mutate(`Nestedness`= 0,
`Connectance` = 0,
`network_size`=0)
# a loop to go over the rows of the dataframe to calculate nestedness and network size for each network
for (r in 1:nrow(fact_2)){
g<-adj.mat(myfiles[which(myfiles == fact_2$web[r])]) #network web names
Aspecies<- dim(g)[2] # no of animal species
Plantspecies<- dim(g)[1]
fact_2$network_size[r]<-Aspecies+Plantspecies
fact_2$Nestedness[r]<-  round(nestedness_NODF(g),2)
fact_2$Connectance[r] <- Connectance(g)
}
fact_2 <- fact_2 %>% filter(network_size < 105 )
webfiles<-as.character(fact_2$web)
fact<-expand.grid(Temperature=seq(12,45,0.5),
h2=c(0,0.4),
gamma=1.5,
var=c("high","low"),
`web` = webfiles[40:86],
`replicates`=1+(1:1)*100)
r=1
g<-adj.mat(myfiles[which(myfiles == fact$web[r])]) #network web names
Aspecies<- dim(g)[2] # no of animal species
Plantspecies<- dim(g)[1] # no of plant species
#degree of plants and anichmals
degree.plants<-degree.animals<-numeric()
for(i in 1:Plantspecies){
degree.plants[i]<-sum(g[i,])} # degree of plants
for(j in 1:Aspecies){
degree.animals[j]<-sum(g[,j]) # degree of animals
}
degree<-c(degree.animals, degree.plants)
nestedness<-nestedness_NODF(g)
C<-Connectance(g)
network_size<-Aspecies+Plantspecies
#parameters for modelling: intialisation of the model
if(fact$var[r] == "high"){  sigma<-runif((Aspecies+Plantspecies), 0.05,0.09)
}else {sigma <- runif((Aspecies+Plantspecies), 0.005,0.009)
}#three species trait variance
na <- runif( (Aspecies) , 1,1)
np<- runif( (Plantspecies) , 1,1)
muA<- runif(Aspecies, 10, 30)  #initial mean phenotypic optimum trait values
muP<- runif(Plantspecies, 10, 30)   #intial mean phenotypic optimum trait values
#parameters below are taken from another paper Akesson et al 2021 Nat Comms.
bw  <- 2
aw  <- 0
gi <- 1
ki <-0.1 #mortality rate
w<- 7#mutualism interaction width
Temp<-fact$Temperature[r]  #seq(Tmin, Tmax, by=(Tmax-Tmin)/50)
h2<-fact$h2[r] #heritability of trait variance
Amatrix <- mat.comp(g)$Amatrix  #competition matrix , aij, for animals
Pmatrix <- mat.comp(g)$Pmatrix  #competition matrix , aij, for plants
mut.strength=1.5 #average mutualistic strength
params<-list(matrix=g,bw=bw,aw=aw,h2=h2,w=w,Amatrix=Amatrix,Pmatrix=Pmatrix,web=fact$web[r],
gi=gi,ki=ki,Temp=Temp, sigma=sigma,A=Aspecies,P=Plantspecies,degree=degree,
var=fact$var[r],g=g,
mut.strength=1.5,nestedness=nestedness,C=C,network_size=network_size)
ic<-c(na,np,muA,muP) ## initial conditions coerced into a vector
ic<-c(na,np,muA,muP) ## initial conditions coerced into a vector
tmax <- 1e3## time to integrate equations fors
out<-cluster_run( params = params,ic = ic,tmax = tmax)
params = params
ic = ic
tmax = tmax
sol<-ode(func=eqs, y=ic, parms=params, times=seq(0, tmax, by=tmax/100)) %>% ## solve ODEs
organize_results(params)
A<-params$A # no. of animal species
P<- params$P #no. of plant species
sol<-  sol %>% filter(time == tmax)
Na<-sol %>% filter(type =="N")
Np<-sol %>% filter(type =="P")
ma<-sol %>% filter(type == "ma")
mp<-sol %>% filter(type == "mp")
richness_animal<- length( which(Na$v>1e-3 ) ==TRUE)
richness_plant<- length( which(Np$v>1e-3 ) ==TRUE)
trait_match<-matrix(0,nrow=A,ncol=P)
if(params$var== "high"){ s <- 0.09}else{s<-0.009}
muA <- (ma %>% filter(time == tmax))$v
muP <-(mp %>% filter(time == tmax))$v
density<- c(Na$v, Np$v)
proportion<- density/sum(density)
traits<-c(muA,muP)
MUu<-sum(proportion*traits)
trait_lag<- params$Temp - MUu
for(i in 1: A){
trait_match[i,] <- exp(-(muA[i]- muP)^2/(2*s+1))*params$g[,i]
}
trait_match
params$g[,i]
i=1
exp(-(muA[i]- muP)^2/(2*s+1))*params$g[,i]
params$g[,i]
exp(-(muA[i]- muP)^2/(2*s+1))*params$g[,i]
for(i in 1: A){
trait_match[i,] <- exp(-(muA[i]- muP)^2/(2*s+1))*params$g[,i]
}
mean(trait_match,na.rm=T)
for(i in 1: A){
trait_match[i,] <- exp(-(muA[i]- muP)^2/(2*s+1))
}
trait_matching<-mean(trait_match,na.rm=T)
mean(trait_match,na.rm=T)
for(i in 1: A){
trait_match[i,] <- exp(-(muA[i]- muP)^2/(2*s+1))*params$g[,i]
}
mean(trait_match,na.rm=T)
dim(g)
A
setwd("C:/Users/localadmin/Dropbox/Bielefeld Postdoc/08 Bsc student project-TIM/clusterun")
rm(list=ls())
source("01_functions_cluster.R")
library(statmod)
#require(deSolve) ## for integrating ordinary differential equations
require(tidyr) ## for efficient data manipulation & plotting
library(cowplot) ## for arranging plots in a grid
library(dplyr)
library(readr)
library(beepr)
library(viridis)
library(ggdist)
library(dplyr)
#library(readr)
library(beepr)
library(viridis)
library(moments)
library(ggplot2)
mydir = 'datasets_1'
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
#myfiles<-myfile
newfiles<-myfiles[1:154]
(r0<-net_dat %>% ggplot(aes(x= Temperature, y =biomass, color=factor(h2)))+
geom_point(size =4, alpha =0.1)+
theme_bw()+
scale_color_brewer(palette="Dark2")+
facet_wrap(.~individual_variation)+
ylab("Equilibrium biomass")+
labs(color="heritability")+
stat_smooth(geom="smooth", method = "loess", se=F , size =3, alpha =0.25))
# load("cluster_warming_1.RData")
#
#  net_dat<-sp_dat<-NULL
#  for(i in 1:10720){
#    print(i)
#  net_dat<-rbind(net_dat, output[[i]]$output_network_data)
#  sp_dat<-rbind(sp_dat,output[[i]]$species_level_data)
#  }
#
# #
load("cluster_warming_2.RData")
# #
net_dat1<-sp_dat1<-NULL
for(i in 1:12596){
print(i)
net_dat1<-rbind(net_dat1, output[[i]]$output_network_data)
sp_dat1<-rbind(sp_dat1,output[[i]]$species_level_data)
}
net_dat1 %>% ggplot(aes(x= Temperature, y =trait_matching, color=factor(h2)))+
geom_point(size =4, alpha =0.1)+
theme_bw()+
facet_wrap(.~individual_variation)+
ylab("Richness")+
labs(color="heritability")+
stat_smooth(geom="smooth", method = "loess", se=F , size =3, alpha =0.25)
net_dat1 %>% ggplot(aes(x= Temperature, y =trait_matching, color=factor(h2)))+
geom_point(size =4, alpha =0.1)+
theme_bw()+
facet_wrap(.~individual_variation)+
ylab("Richness")+
labs(color="heritability")
